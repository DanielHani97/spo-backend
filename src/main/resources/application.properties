# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database 
spring.datasource.url = jdbc:postgresql://${DB_HOST}/${DATABASE_NAME}?currentSchema=master

# Username and secret
spring.datasource.username = ${DATABASE_USER}
spring.datasource.password = ${DATABASE_PASSWORD}

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jackson.serialization.INDENT_OUTPUT = true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

jwt.header = Authorization
jwt.secret = mySecret
jwt.expiration = 288
jwt.route.authentication.path = auth
jwt.route.authentication.refresh = refresh

# server ip address
srv.ip = *

#file upload max limit
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB

